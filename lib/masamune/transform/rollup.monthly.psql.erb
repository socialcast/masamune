<%- target_partition = target.partition_table(date) %>
<%- source_partition = source.partition_table(date) %>

BEGIN;

DROP TABLE IF EXISTS <%= target_partition.name %>;

CREATE TABLE <%= target_partition.name %> (
  <%= target_partition.constraints %>
) INHERITS (<%= target.name %>);

<%- target.foreign_key_columns.each do |column| -%>
ALTER TABLE <%= target_partition.name %> ADD CONSTRAINT <%= target_partition.name %>_<%= column.name %>_fkey FOREIGN KEY (<%= column.name %>) <%= column.reference_constraint %>;
<%- end -%>

COMMIT;

BEGIN;

INSERT INTO
  <%= target_partition.name %> (<%= target.rollup_columns.map{|k, v| "#{k}"}.join(', ') %>, time_key)
SELECT
  <%- target.rollup_columns.each do |k, v| -%>
  <%- if k.eql? :total -%>
        SUM(a.<%= k%><%=') AS total,'%>
  <%- else if k.eql? :date_dimension_uuid-%>
       (SELECT uuid FROM date_dimension c WHERE c.month_epoch = b.month_epoch ORDER BY c.date_id LIMIT 1),
  <%- else-%>
        a.<%= k %><%=',' %>
  <%- end -%>
  <%- end -%>
  <%- end -%><%=target_partition.startTime%>
FROM
  <%= source_partition.name %> a
JOIN
    date_dimension b
ON
    b.uuid = a.date_dimension_uuid

GROUP BY
 <%- target.rollup_columns.each do |k, v| -%>
 <%- if k.eql? :date_dimension_uuid -%>
        b.month_epoch
 <%- else if not k.eql? :total -%>
        , a.<%= k %>
 <%- end -%>
 <%- end -%>
 <%- end -%>
;
COMMIT;

BEGIN;

<%- target.index_columns.each do |column_names, unique| -%>
<%- if not column_names[0].eql? :time_key -%>
<%- index_name = "#{target_partition.name}_#{column_names.join('_')}_index" -%>
CREATE <%= unique ? 'UNIQUE INDEX' : 'INDEX' %> <%= index_name %> ON <%= target_partition.name %> (<%= column_names.join(', ') %>);
<%- end -%>
<%- end -%>
COMMIT;

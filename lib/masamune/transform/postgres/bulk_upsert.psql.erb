--  The MIT License (MIT)
--
--  Copyright (c) 2014-2016, VMware, Inc. All Rights Reserved.
--
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
--
--  The above copyright notice and this permission notice shall be included in
--  all copies or substantial portions of the Software.
--
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--  THE SOFTWARE.

SELECT pg_advisory_lock(<%= target.lock_id %>);

BEGIN;

<%- if target.update_columns.any? -%>
UPDATE
  <%= target.name %>
SET
  <%- target.update_columns.each do |column, last| -%>
  <%= column.name %> = COALESCE(<%= source.name %>.<%= column.name %>, <%= target.name %>.<%= column.name %>)<%= ',' unless last %>
  <%- end -%>
FROM
  <%= source.name %>
WHERE
  <%- target.unique_columns.each do |column, last| -%>
  <%= target.name %>.<%= column.name %> = <%= source.name %>.<%= column.name %><%= ' AND' unless last %>
  <%- end -%>
;
<%- end -%>

<%- if target.unique_columns.any? -%>
INSERT INTO
  <%= target.name %> (<%= target.insert_columns.map { |column,_| column.name }.join(', ') %>)
SELECT
  <%- target.insert_columns.each do |column, last| -%>
  <%= source.name %>.<%= column.name %><%= ',' unless last %>
  <%- end -%>
FROM
  <%= source.name %>
LEFT OUTER JOIN
  <%= target.name %>
ON
  <%- target.unique_columns.each do |column, last| -%>
  <%= target.name %>.<%= column.name %> = <%= source.name %>.<%= column.name %><%= ' AND' unless last %>
  <%- end -%>
WHERE
  <%- target.unique_columns.each do |column, last| -%>
  <%= target.name %>.<%= column.name %> IS NULL<%= ' AND' unless last %>
  <%- end -%>
;
<%- end -%>

COMMIT;

SELECT pg_advisory_unlock(<%= target.lock_id %>);
